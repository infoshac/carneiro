{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 .SFNSMono-Regular;\f2\fnil\fcharset0 HelveticaNeue-Medium;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red24\green25\blue27;\red255\green255\blue255;\red27\green31\blue34;
\red17\green21\blue28;\red244\green246\blue247;}
{\*\expandedcolortbl;;\cssrgb\c12549\c12941\c14118;\cssrgb\c100000\c100000\c100000;\cssrgb\c14118\c16078\c18039;
\cssrgb\c8235\c10588\c14902;\cssrgb\c96471\c97255\c97647;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
https://www.youtube.com/channel/UCzQcwdnSkg0XydyCpC2Ng_g\
\
https://www.youtube.com/watch?v=vOrHFPz7QDA&t=1044s\
\
https://www.youtube.com/watch?v=Z6kw_aJHJLU\
\
\
ENV DO BACK :\
TODOS OS TESTE SAO AS VARIAVEIS TESTE\
\
TYPEORM_CONNECTION=postgres\
TYPEORM_HOST=tuffi.db.elephantsql.com\
TYPEORM_DATABASE=qxceopsc\
TYPEORM_USERNAME=qxceopsc\
TYPEORM_PASSWORD=rszDFEmglhSvs_iff8YhMDyzxECcKaLv\
TYPEORM_PORT=5432\
TYPEORM_SYNCHRONIZE=true\
TYPEORM_ENTITIES=src/**/entities/*.ts\
TYPEORM_MIGRATIONS=src/database/migrations/*.ts\
TYPEORM_MIGRATIONS_DIR=src/database/migrations\
TYPEORM_DEV_DB=true\
JWT_SECRET=AAAAA\
TEST_DB_HOST=localhost\
TEST_DB_PORT=5432\
TEST_DB_USERNAME=postgres\
TEST_DB_PASSWORD=root\
TEST_DB_NAME=seedz\
APICONTRIES\
\
\
\
\
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf4 \cb1 echo "# react" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/infoshac/react.git\
git push -u origin main\
\
\
git remote add origin https://github.com/infoshac/react.git\
git branch -M main\
git push -u origin main\
\
___________________________________________\
//adicionar branch\
git checkout -b nome da branch\
___________________________________________\
//Acsessar uma branch\
git checkout nome da branch\
____________________________________________\
//Clonar um unico branch do repositorio\
git clone --single-branch --branch (nome da brach) url do repository\
Ex:\
git clone --single-branch --branch branchTeste https://github.com/infoshac/treinamentoReact.git\
_______________________________________________\
Como subir para uma branch especifica\
Primeiro vc clona o repositorio (git clone)-> dentro do reposit\'f3rio voce navega entre as branchs que fazem parte do mesmo(git checkout) e se precisar criar (checkout -b)->\
___________________________________________________\
\
Para atualizar o branch atual \
Entra na brach(git checkout nome_branch) depois baixa (git pull)\
____________________________________________________\
//Para atualizar repositorio online\
Primeiro adiciona as altera\'e7\'f5es\
git add . \
Depois voce comenta\
	git commit -m "first commit"\
Depois subir com os arquivos \
Git push \
\
\pard\pardeftab720\sl440\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://app.asana.com/0/1200549944743638/list"}}{\fldrslt 
\f2 \cf5 \cb6 Saulo Henrique Carneiro}}
\f3\fs24 \cf5 \cb6 H\'e1 12 minutos.
\fs28 \cb1 \
\pard\pardeftab720\sl560\partightenfactor0

\fs24 \cf5 \
\
Atendimento ao Paatrick: 15:14 - 15:45\
Marcel- 15:45:  \
\
05/07\
SZB-48: Bucket- 11:46 a 12:03\
\
06/07\
MTB- 08 11:57 as 12:34\
MTB-05 12:34 as 13:05\
MTB-06 21:00 as 21:15\
\
07/07\
MTB-06 10:40 as 10:54\
08/07 - SZF-32: Conexao da API Login\
\pard\pardeftab720\sl440\partightenfactor0

\fs28 \cf5 \cb6 11:13 - 11:35\cb1 \
\cb6 - Hiago Defini o arquivo .env o valor\cb1 \
\cb6 API_BASE_URL={\field{\*\fldinst{HYPERLINK "https://seedz-api.herokuapp.com/"}}{\fldrslt https://seedz-api.herokuapp.com}}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \
\pard\pardeftab720\sl560\partightenfactor0

\fs24 \cf5 SZB-13: Implementar gerador de PDF- 11:00 - 11:13\
\pard\pardeftab720\sl440\partightenfactor0

\fs28 \cf5 \
}